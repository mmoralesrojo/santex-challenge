getTodos:
  handler: handler.getTodos
  name: ${self:service}-${self:provider.stage}-gettodos
  events:
    - http:
        path: /santex/todo
        method: get
        cors:
          ${file(serverless/http-cors.yml)}
        documentation:
          summary: 'Get todos'
          description: 'Get all todos from database'
          methodResponses:
            - statusCode: '200'
              responseBody:
                description: 'Array with all todos'
              responseModels:
                application/json: 'GetTodosResponse'
            - statusCode: '500'
              responseBody:
                description: 'An error ocurred in the server'
              responseModels:
                application/json: 'ErrorResponse'
            - statusCode: '400'
              responseBody:
                description: 'Bad request'
              responseModels:
                application/json: 'ErrorResponse'
getTodo:
  handler: handler.getTodo
  name: ${self:service}-${self:provider.stage}-gettodo
  events:
    - http:
        path: /santex/todo/{id}
        method: get
        cors:
          ${file(serverless/http-cors.yml)}
        request:
          parameters:
            paths:
              id: true
        documentation:
          summary: 'Get a Todo'
          description: 'Fetches a Todo by its ID'
          parameters:
            - name: 'id'
              description: 'The ID of the Todo'
              required: true
              schema:
                type: 'string'
          methodResponses:
            - statusCode: '200'
              responseBody:
                description: 'Single todo'
              responseModels:
                application/json: 'GetTodoResponse'
            - statusCode: '404'
              responseBody:
                description: 'Todo not found'
              responseModels:
                application/json: 'ErrorResponse'
            - statusCode: '500'
              responseBody:
                description: 'An error ocurred in the server'
              responseModels:
                application/json: 'ErrorResponse'
createTodo:
  handler: handler.createTodo
  name: ${self:service}-${self:provider.stage}-createtodo
  events:
    - http:
        path: /santex/todo
        method: post
        cors:
          ${file(serverless/http-cors.yml)}
        documentation:
          summary: 'Create a Todo'
          description: 'Creates a new Todo'
          requestModels:
            application/json: 'CreateTodoRequest'
          methodResponses:
            - statusCode: '200'
              responseBody:
                description: 'Single todo'
              responseModels:
                application/json: 'CreateTodoResponse'
            - statusCode: '400'
              responseBody:
                description: 'Bad request'
              responseModels:
                application/json: 'ErrorResponse'
            - statusCode: '500'
              responseBody:
                description: 'An error ocurred in the server'
              responseModels:
                application/json: 'ErrorResponse'
updateTodo:
  handler: handler.updateTodo
  name: ${self:service}-${self:provider.stage}-updatetodo
  events:
    - http:
        path: /santex/todo/{id}
        method: patch
        cors:
          ${file(serverless/http-cors.yml)}
        request:
          parameters:
            paths:
              id: true
        documentation:
          summary: 'Update a Todo'
          description: 'Update an existing Todo'
          requestModels:
            application/json: 'UpdateTodoRequest'
          methodResponses:
            - statusCode: '200'
              responseBody:
                description: 'Updated single todo'
              responseModels:
                application/json: 'CreateTodoResponse'
            - statusCode: '400'
              responseBody:
                description: 'Bad request'
              responseModels:
                application/json: 'ErrorResponse'
            - statusCode: '404'
              responseBody:
                description: 'Todo not found'
              responseModels:
                application/json: 'ErrorResponse'
            - statusCode: '500'
              responseBody:
                description: 'An error ocurred in the server'
              responseModels:
                application/json: 'ErrorResponse'
deleteTodo:
  handler: handler.deleteTodo
  name: ${self:service}-${self:provider.stage}-deletetodo
  events:
    - http:
        path: /santex/todo/{id}
        method: delete
        cors:
          ${file(serverless/http-cors.yml)}
        request:
          parameters:
            paths:
              id: true
        documentation:
          summary: 'Delete a Todo'
          description: 'Deletes an existing Todo, only allowed if todo is completed'
          methodResponses:
            - statusCode: '204'
              responseBody:
                description: 'No content'
            - statusCode: '400'
              responseBody:
                description: 'Bad request'
              responseModels:
                application/json: 'ErrorResponse'
            - statusCode: '403'
              responseBody:
                description: 'Todo is not completed, cannot be deleted'
              responseModels:
                application/json: 'ErrorResponse'
            - statusCode: '404'
              responseBody:
                description: 'Todo not found'
              responseModels:
                application/json: 'ErrorResponse'
            - statusCode: '500'
              responseBody:
                description: 'An error ocurred in the server'
              responseModels:
                application/json: 'ErrorResponse'